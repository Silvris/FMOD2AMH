//------------------------------------------------
//--- 010 Editor v9.0.2 Binary Template
//
//      File: 
//   Authors: 
//   Version: 
//   Purpose: 
//  Category: 
// File Mask: 
//  ID Bytes: 
//   History: 
//------------------------------------------------
local int i;

typedef struct{
    char MOMO[4];
    uint version;
    uint HeaderOffset;
    uint UnknDataOffset;
    uint AudioOffset;
    uint AudioLength;
    uint unkn1;
    uint unkn2;
    uint unkn3;
    uint unkn4;
}MOMOHeader;

typedef struct{
    char VersMagic[8];
    uint version;
    uint unkn;
}VersStruct;

typedef struct{
    char HeadMagic[8];
    uint structLength;
    uint unkn;
    uint EndOfAudio;
    uint ProgOffset;
    uint SsetOffset;
    uint SmplOffset;
    uint VagiOffset;
    byte FF[28];
}HeadStruct;

typedef struct{
    char ProgMagic[8];
    uint structLength;
    uint structCount;
    for(i=0;i<structCount;i++){
        uint unkn1;
        uint unkn2;
        short unkn3;
        byte unkn4;
    };
}ProgStruct;

typedef struct{
    char VagiMagic[8];
    uint unknversion;
    uint structCount;
    for(i=0;i<structCount;i++){
        uint fileoffset;
    };
    uint unkn;
    for(i=0;i<structCount+1;i++){
        uint offset<bgcolor=0x00FF00>;
        ushort sampleRate<bgcolor=0x0000FF>;
        ushort length<bgcolor=0xFF0000>;
    };
}VagiStruct;

typedef struct{
    uint unkn1<bgcolor=0xFF00FF>;
    uint unkn2<bgcolor=0xFFFF00>;
    uint unkn3<bgcolor=0x00FFFF>;
}Sample;

typedef struct{
    char SmplMagic[8];
    uint structLength;
    uint structCount;
    uint extra;
    for(i=0;i<structCount;i++){
        Sample sample;
    };
    for(i=0;i<extra;i++){
        Sample SecondSample;
    };
}SmplStruct;

MOMOHeader Header;
FSeek(Header.HeaderOffset);
VersStruct SCEIVers;
HeadStruct SCEIHeader;
FSeek(SCEIHeader.ProgOffset+SCEIHeader.structLength);
ProgStruct SCEIProg;
FSeek(SCEIHeader.VagiOffset+SCEIHeader.structLength);
VagiStruct SCEIVagi;
FSeek(SCEIHeader.SmplOffset+SCEIHeader.structLength);
SmplStruct SCEISmpl;